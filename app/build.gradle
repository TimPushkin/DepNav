plugins {
    alias libs.plugins.android.application
    alias libs.plugins.jetbrains.kotlin.android
    alias libs.plugins.androidx.room
    alias libs.plugins.google.dagger.hilt.android
    alias libs.plugins.google.devtools.ksp
}

kotlin {
    jvmToolchain(17)
    compilerOptions {
        freeCompilerArgs.add('-opt-in=kotlin.RequiresOptIn')
    }
}

def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def version = ['major': 1, 'minor': 3, 'patch': 3]

android {
    namespace 'ru.spbu.depnav'

    compileSdk 34

    signingConfigs {
        release {
            if (!keystoreProperties.isEmpty()) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    defaultConfig {
        applicationId 'ru.spbu.depnav'
        minSdk 21
        targetSdk 34
        versionCode version.major * 10000 + version.minor * 100 + version.patch
        versionName "${version.major}.${version.minor}.${version.patch}"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.composeCompiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation libs.androidx.lifecycle.runtimeKtx
    implementation libs.androidx.lifecycle.runtimeCompose
    implementation libs.androidx.lifecycle.viewmodelCompose

    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    annotationProcessor libs.androidx.room.compiler
    ksp libs.androidx.room.compiler

    implementation libs.google.dagger.hilt
    ksp libs.google.dagger.hiltCompiler

    implementation platform(libs.androidx.compose.bom)
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation libs.androidx.core.ktx
    implementation libs.androidx.activity.compose
    implementation libs.plrapps.mapcompose

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.test.extJunit
}

ksp {
    arg 'room.incremental', 'true'
    arg 'room.generateKotlin', 'true'
}

room {
    schemaDirectory "$projectDir/schemas"
}
